enviroment:
    AWSCLIUserProfile: adminuser
cognitoIdentityPoolInfo:
    roleDefinitions:
        apiAccessRole:
            policyDocument:
                Version: '2012-10-17'
                Statement:
                    -
                        Effect: Allow
                        Principal:
                            Federated: cognito-identity.amazonaws.com
                        Action: 'sts:AssumeRoleWithWebIdentity'
                        Condition:
                            StringEquals:
                                'cognito-identity.amazonaws.com:aud': 'us-east-1:a312d3e3-c45b-49eb-8d72-5b7acd73edc0'
                            'ForAnyValue:StringLike':
                                'cognito-identity.amazonaws.com:amr': authenticated
            policies:
                -
                    arnPolicy: 'arn:aws:iam::aws:policy/AmazonAPIGatewayInvokeFullAccess'
                    name: AmazonAPIGatewayInvokeFullAccess
            arnRole: 'arn:aws:iam::940223146162:role/apiAccessRole'
    identityPools:
        testPool:
            lambdaAliases:
                resource: IDENTITY_POOL
            authProviders:
                custom:
                    developerProvider: testProvider
            allowUnauthedIdentities: false
            roles:
                authenticated: apiAccessRole
            rolePolicyDocumentStatementConditions:
                apiAccessRole:
                    -
                        Action: 'sts:AssumeRoleWithWebIdentity'
                        Condition:
                            StringEquals:
                                'cognito-identity.amazonaws.com:aud': $identityPoolId
                            'ForAnyValue:StringLike':
                                'cognito-identity.amazonaws.com:amr': authenticated
            identityPoolId: 'us-east-1:9ec13d78-e816-4d30-aeef-bfbd53ccf78e'
lambdaInfo:
    roleDefinitions:
        userConsumer:
            policyDocument:
                Version: '2012-10-17'
                Statement:
                    -
                        Effect: Allow
                        Principal:
                            Service: lambda.amazonaws.com
                        Action: 'sts:AssumeRole'
            policies:
                -
                    arnPolicy: 'arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess'
                    name: AmazonDynamoDBFullAccess
                -
                    arnPolicy: 'arn:aws:iam::aws:policy/AmazonCognitoReadOnly'
                    name: AmazonCognitoReadOnly
                -
                    arnPolicy: 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
                    name: AWSLambdaBasicExecutionRole
            arnRole: 'arn:aws:iam::940223146162:role/userConsumer'
        userCreator:
            policyDocument:
                Version: '2012-10-17'
                Statement:
                    -
                        Effect: Allow
                        Principal:
                            Service: lambda.amazonaws.com
                        Action: 'sts:AssumeRole'
            policies:
                -
                    arnPolicy: 'arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess'
                    name: AmazonDynamoDBFullAccess
                -
                    arnPolicy: 'arn:aws:iam::aws:policy/AmazonCognitoPowerUser'
                    name: AmazonCognitoPowerUser
                -
                    arnPolicy: 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
                    name: AWSLambdaBasicExecutionRole
            arnRole: 'arn:aws:iam::940223146162:role/userCreator'
apiInfo:
    roleDefinitions:
        lambdaExecuteRole:
            policyDocument:
                Version: '2012-10-17'
                Statement:
                    -
                        Effect: Allow
                        Principal:
                            Service: apigateway.amazonaws.com
                        Action: 'sts:AssumeRole'
            policies:
                -
                    arnPolicy: 'arn:aws:iam::940223146162:policy/LambdaInvocation'
                    name: LambdaInvocation
            arnRole: 'arn:aws:iam::940223146162:role/lambdaExecuteRole'
    defaultDeployStage: dev
    region: us-east-1
    AWSSwaggerHeader:
        swagger: '2.0'
        info:
            version: 1.0.0
            title: 'Swagger Auth'
            description: 'Developer Provider Auth'
            termsOfService: 'http://noneyet.com/'
            contact:
                name: HN
                email: horsenoggin@gmail.com
                url: 'http://horsenoggin.some'
            license:
                name: MIT
                url: 'http://opensource.org/licenses/MIT'
        schemes:
            - https
        consumes:
            - application/json
        produces:
            - application/json
    sharedDefinitions:
        user:
            type: object
            required:
                - email
            properties:
                email:
                    type: string
        authRequest:
            type: object
            required:
                - email
                - password
            properties:
                email:
                    type: string
                password:
                    type: string
        credentials:
            type: object
            required:
                - IdentityId
                - Token
            properties:
                IdentityId:
                    type: string
                Token:
                    type: string
        Error:
            type: object
            required:
                - message
                - type
                - request-id
            properties:
                message:
                    type: string
                type:
                    type: string
                request-id:
                    type: string
    sharedSecurityDefinitions:
        sigv4:
            type: apiKey
            name: Authorization
            in: header
            x-amazon-apigateway-authtype: awsSigv4
    awsId: 79zsqwk9x7
    lastDeploy:
        uploadResult:
            description: 'Yet another deploy...'
            id: e57oie
            createdDate: 1481127073
        invokeURL: 'https://79zsqwk9x7.execute-api.us-east-1.amazonaws.com/dev'
dynamodbInfo:
    users:
        lambdaAliases:
            resource: USERS
            attributes:
                ID: id
                EMAIL: email
                LAST_LOGIN_TIMESTAMP: lastLoginTimestamp
                PASSWORD: password
                SIGNUP_TIMESTAMP: signupTimestamp
        attributeDefinitions:
            -
                AttributeName: id
                AttributeType: S
        keySchema:
            -
                AttributeName: id
                KeyType: HASH
        provisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
        Table:
            TableArn: 'arn:aws:dynamodb:us-east-1:940223146162:table/users'
            AttributeDefinitions:
                -
                    AttributeName: id
                    AttributeType: S
            ProvisionedThroughput:
                NumberOfDecreasesToday: 0
                WriteCapacityUnits: 5
                ReadCapacityUnits: 5
            TableSizeBytes: 0
            TableName: users
            TableStatus: CREATING
            KeySchema:
                -
                    KeyType: HASH
                    AttributeName: id
            ItemCount: 0
            CreationDateTime: 1481072585.911
    userEmail:
        lambdaAliases:
            resource: EMAILS
            attributes:
                EMAIL: email
                ID: id
        attributeDefinitions:
            -
                AttributeName: email
                AttributeType: S
        keySchema:
            -
                AttributeName: email
                KeyType: HASH
        provisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
        Table:
            TableArn: 'arn:aws:dynamodb:us-east-1:940223146162:table/userEmail'
            AttributeDefinitions:
                -
                    AttributeName: email
                    AttributeType: S
            ProvisionedThroughput:
                NumberOfDecreasesToday: 0
                WriteCapacityUnits: 5
                ReadCapacityUnits: 5
            TableSizeBytes: 0
            TableName: userEmail
            TableStatus: CREATING
            KeySchema:
                -
                    KeyType: HASH
                    AttributeName: email
            ItemCount: 0
            CreationDateTime: 1481072585.902
