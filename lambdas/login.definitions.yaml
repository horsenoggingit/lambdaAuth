implementationFiles:
    login:
        - login.js
linkFiles:
    common:
        - PasswordHash.js
        - UserIdentity.js
        - APIParamVerify.js
        - Devices.js
AWSCLIProfile: adminuser
lambdaInfo:
    awsResourceInfo:
        awsResources:
            -
                type: dynamodbInfo
                resourceName: Users
            -
                type: dynamodbInfo
                resourceName: UserEmail
            -
                type: dynamodbInfo
                resourceName: DeviceUsers
            -
                type: cognitoIdentityPoolInfo
                resourceName: Pool
    roleName: userCreator
    functionName: login
    region: us-east-1
    language: nodejs4.3
    eventParamPaths:
        /login:
            post:
                type: object
                required:
                    - email
                    - password
                    - device_id
                properties:
                    email:
                        type: string
                    password:
                        type: string
                    device_id:
                        type: string
apiInfo:
    paths:
        /login:
            post:
                description: 'Log in to the application'
                operationId: login
                produces:
                    - application/json
                parameters:
                    -
                        name: loginRequest
                        in: body
                        required: true
                        schema:
                            $ref: '#/definitions/loginRequest'
                responses:
                    '200':
                        description: ok
                        schema:
                            $ref: '#/definitions/credentials'
                        headers:
                            Access-Control-Allow-Headers:
                                type: string
                            Access-Control-Allow-Methods:
                                type: string
                            Access-Control-Allow-Origin:
                                type: string
                    '400':
                        description: '400 response'
                        schema:
                            $ref: '#/definitions/Error'
                        headers:
                            Access-Control-Allow-Headers:
                                type: string
                            Access-Control-Allow-Methods:
                                type: string
                            Access-Control-Allow-Origin:
                                type: string
                    '401':
                        description: '400 response'
                        schema:
                            $ref: '#/definitions/Error'
                        headers:
                            Access-Control-Allow-Headers:
                                type: string
                            Access-Control-Allow-Methods:
                                type: string
                            Access-Control-Allow-Origin:
                                type: string
                    '404':
                        description: '404 response'
                        schema:
                            $ref: '#/definitions/Error'
                        headers:
                            Access-Control-Allow-Headers:
                                type: string
                            Access-Control-Allow-Methods:
                                type: string
                            Access-Control-Allow-Origin:
                                type: string
                    '405':
                        description: '405 response'
                        schema:
                            $ref: '#/definitions/Error'
                        headers:
                            Access-Control-Allow-Headers:
                                type: string
                            Access-Control-Allow-Methods:
                                type: string
                            Access-Control-Allow-Origin:
                                type: string
                    '500':
                        description: '405 response'
                        schema:
                            $ref: '#/definitions/Error'
                        headers:
                            Access-Control-Allow-Headers:
                                type: string
                            Access-Control-Allow-Methods:
                                type: string
                            Access-Control-Allow-Origin:
                                type: string
                x-amazon-apigateway-integration:
                    credentials: lambdaExecuteRole
                    responses:
                        default:
                            statusCode: '200'
                            responseTemplates:
                                application/json: __passthrough__
                            responseParameters:
                                method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
                                method.response.header.Access-Control-Allow-Methods: '''*'''
                                method.response.header.Access-Control-Allow-Origin: '''*'''
                        '.*httpStatus\":400.*':
                            statusCode: '400'
                            responseTemplates:
                                application/json: "#set ($errorMessageObj = $util.parseJson($input.path('$.errorMessage')))\n#set ($bodyObj = $util.parseJson($input.body))\n{\n  \"type\" : \"$errorMessageObj.errorType\",\n  \"message\" : \"$errorMessageObj.message\",\n  \"requestId\" : \"$errorMessageObj.requestId\"\n}"
                            responseParameters:
                                method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
                                method.response.header.Access-Control-Allow-Methods: '''*'''
                                method.response.header.Access-Control-Allow-Origin: '''*'''
                        '.*httpStatus\":401.*':
                            statusCode: '401'
                            responseTemplates:
                                application/json: "#set ($errorMessageObj = $util.parseJson($input.path('$.errorMessage')))\n#set ($bodyObj = $util.parseJson($input.body))\n{\n  \"type\" : \"$errorMessageObj.errorType\",\n  \"message\" : \"$errorMessageObj.message\",\n  \"requestId\" : \"$errorMessageObj.requestId\"\n}"
                            responseParameters:
                                method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
                                method.response.header.Access-Control-Allow-Methods: '''*'''
                                method.response.header.Access-Control-Allow-Origin: '''*'''
                        '.*httpStatus\":404.*':
                            statusCode: '404'
                            responseTemplates:
                                application/json: "#set ($errorMessageObj = $util.parseJson($input.path('$.errorMessage')))\n#set ($bodyObj = $util.parseJson($input.body))\n{\n  \"type\" : \"$errorMessageObj.errorType\",\n  \"message\" : \"$errorMessageObj.message\",\n  \"requestId\" : \"$errorMessageObj.requestId\"\n}"
                            responseParameters:
                                method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
                                method.response.header.Access-Control-Allow-Methods: '''*'''
                                method.response.header.Access-Control-Allow-Origin: '''*'''
                        '.*httpStatus\":405.*':
                            statusCode: '405'
                            responseTemplates:
                                application/json: "#set ($errorMessageObj = $util.parseJson($input.path('$.errorMessage')))\n#set ($bodyObj = $util.parseJson($input.body))\n{\n  \"type\" : \"$errorMessageObj.errorType\",\n  \"message\" : \"$errorMessageObj.message\",\n  \"requestId\" : \"$errorMessageObj.requestId\"\n}"
                            responseParameters:
                                method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
                                method.response.header.Access-Control-Allow-Methods: '''*'''
                                method.response.header.Access-Control-Allow-Origin: '''*'''
                        '.*httpStatus\":500.*':
                            statusCode: '500'
                            responseTemplates:
                                application/json: "#set ($errorMessageObj = $util.parseJson($input.path('$.errorMessage')))\n#set ($bodyObj = $util.parseJson($input.body))\n{\n  \"type\" : \"$errorMessageObj.errorType\",\n  \"message\" : \"$errorMessageObj.message\",\n  \"requestId\" : \"$errorMessageObj.requestId\"\n}"
                            responseParameters:
                                method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
                                method.response.header.Access-Control-Allow-Methods: '''*'''
                                method.response.header.Access-Control-Allow-Origin: '''*'''
            options:
                summary: 'CORS support'
                description: "Enable CORS by returning correct headers\n"
                consumes:
                    - application/json
                produces:
                    - application/json
                tags:
                    - CORS
                x-amazon-apigateway-integration:
                    type: mock
                    requestTemplates:
                        application/json: "{\n  \"statusCode\" : 200\n}\n"
                    responses:
                        default:
                            statusCode: '200'
                            responseParameters:
                                method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
                                method.response.header.Access-Control-Allow-Methods: '''*'''
                                method.response.header.Access-Control-Allow-Origin: '''*'''
                            responseTemplates:
                                application/json: "{}\n"
                responses:
                    '200':
                        description: 'Default response for CORS method'
                        headers:
                            Access-Control-Allow-Headers:
                                type: string
                            Access-Control-Allow-Methods:
                                type: string
                            Access-Control-Allow-Origin:
                                type: string
